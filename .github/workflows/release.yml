name: Moras CD

on:
  push:
    tags:
      - v*
  release:
    types:
      - published
    
jobs:
  publish-tauri:
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.settings.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf protobuf-compiler
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install dependencies (windows only)
        if: matrix.settings.platform == 'windows-latest'
        run: |
          Invoke-WebRequest -Uri https://github.com/protocolbuffers/protobuf/releases/download/v21.9/protoc-21.9-win64.zip -OutFile protoc.zip
          Expand-Archive -Path protoc.zip -DestinationPath $Env:UserProfile\protoc
          $protocPath = "$Env:UserProfile\protoc\bin\protoc.exe"
          echo "PROTOC=$protocPath" >> $Env:GITHUB_ENV

      - name: install dependencies (mac only)
        if: matrix.settings.platform == 'macos-latest' || matrix.settings.platform == 'aarch64-apple-darwin,x86_64-apple-darwin'
        run: |
          brew install protobuf

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm' # Set this to npm, yarn or pnpm.
          cache-dependency-path: ./src-ui

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        working-directory: src-ui
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: npm install # change this to npm or pnpm depending on which one you use.

      #- name: build frontend
        #working-directory: src-ui
        #run: npm run build # change this to npm or pnpm depending on which one you use.

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: '__VERSION__'
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install ～(∠・ω< )⌒★!'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.settings.args }}
